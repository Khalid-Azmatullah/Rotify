 ]


// Loop through each div and add a click event listener
divs.forEach(div => {
  div.addEventListener('click', function() {
    let newSrc = this.id;
    newSrc = newSrc.slice(1);
    const index = tracks.findIndex(track => track.title === newSrc);
    skipTrack(0, currentTrackIndex=index)
  });
});


let currentTrackIndex = 0;

function updateMediaSession() {
  if ('mediaSession' in navigator) {
    navigator.mediaSession.metadata = new MediaMetadata({
      title: tracks[currentTrackIndex].title,
      artist: tracks[currentTrackIndex].artist,
      // artwork: [
      //   { src: 'artwork.jpg', sizes: '96x96', type: 'image/jpeg' },
      //   { src: 'artwork.jpg', sizes: '128x128', type: 'image/jpeg' },
      //   { src: 'artwork.jpg', sizes: '192x192', type: 'image/jpeg' }
      // ]
    });

    navigator.mediaSession.setActionHandler('play', () => audioPlayer.play());
    navigator.mediaSession.setActionHandler('pause', () => audioPlayer.pause());
    navigator.mediaSession.setActionHandler('previoustrack', () => skipTrack(-1));
    navigator.mediaSession.setActionHandler('nexttrack', () => skipTrack(1));
  }
}

function skipTrack(direction, currentTrack) {
  console.log(typeof currentTrackIndex)
  if (typeof currentTrack === "undefined") {
    console.log('y')
    currentTrack = (currentTrackIndex + direction + tracks.length) % tracks.length
    console.log(currentTrack)
    currentTrackIndex = currentTrack
  }
  audioPlayer.src = 'Songs/' + tracks[currentTrack].src;
  audioPlayer.play();
  updateMediaSession();
}

audioPlayer.addEventListener('play', updateMediaSession);
audioPlayer.addEventListener('pause', updateMediaSession);
audioPlayer.addEventListener('ended', () => skipTrack(1));
</script>
</body>
</html>

